#pragma once
#include "pch.h" //link the pre-compiled file to this file
#include <iostream>
#include <string>
//Lines 7-115 are automatically generated by the system (except from lines 16-19)
//Comments of these generated lines of code are explanations of what the code does which I found by looking through the documentation
namespace HealthFoodProject {
	using namespace std; //use the standard namespace for efficiency by referencing it earlier in the file
	using namespace System; //the following namespace declarations (Lines 9-15) are for using the system and allowing for the creation of a GUI
	using namespace System::ComponentModel;
	using namespace System::Collections;
	using namespace System::Windows::Forms;
	using namespace System::Data;
	using namespace System::Drawing;

	struct LoginDetails { //This struct is used to store the login details of the user (John Doe)
		string Username;
		string Password;
	};

	public ref class Login : public System::Windows::Forms::Form
	{
	public:
		Login(void)
		{
			InitializeComponent();
		}

	protected:
		~Login()
		{
			if (components)
			{
				delete components;
			}
		}
	private: System::Windows::Forms::Button^ btnEnter;
	protected:
	private: System::Windows::Forms::Button^ btnClear;
	private: System::Windows::Forms::TextBox^ txtPassword;
	private: System::Windows::Forms::TextBox^ txtUsername;
	private: System::Windows::Forms::Label^ lblPassword;
	private: System::Windows::Forms::Label^ lblUsername;

	private:
		System::ComponentModel::Container ^components;

#pragma region Windows Form Designer generated code
		void InitializeComponent(void)
		{
			this->btnEnter = (gcnew System::Windows::Forms::Button());
			this->btnClear = (gcnew System::Windows::Forms::Button());
			this->txtPassword = (gcnew System::Windows::Forms::TextBox());
			this->txtUsername = (gcnew System::Windows::Forms::TextBox());
			this->lblPassword = (gcnew System::Windows::Forms::Label());
			this->lblUsername = (gcnew System::Windows::Forms::Label());
			this->SuspendLayout(); 
			// btnEnter
			this->btnEnter->Location = System::Drawing::Point(147, 164);
			this->btnEnter->Name = L"btnEnter";
			this->btnEnter->Size = System::Drawing::Size(75, 23);
			this->btnEnter->TabIndex = 11;
			this->btnEnter->Text = L"Enter";
			this->btnEnter->UseVisualStyleBackColor = true;
			this->btnEnter->Click += gcnew System::EventHandler(this, &Login::btnEnter_Click);
			// btnClear
			this->btnClear->Location = System::Drawing::Point(66, 164);
			this->btnClear->Name = L"btnClear";
			this->btnClear->Size = System::Drawing::Size(75, 23);
			this->btnClear->TabIndex = 10;
			this->btnClear->Text = L"Clear";
			this->btnClear->UseVisualStyleBackColor = true;
			this->btnClear->Click += gcnew System::EventHandler(this, &Login::btnClear_Click);
			// txtPassword
			this->txtPassword->Location = System::Drawing::Point(122, 108);
			this->txtPassword->Name = L"txtPassword";
			this->txtPassword->Size = System::Drawing::Size(100, 20);
			this->txtPassword->TabIndex = 9;
			// txtUsername
			this->txtUsername->Location = System::Drawing::Point(122, 73);
			this->txtUsername->Name = L"txtUsername";
			this->txtUsername->Size = System::Drawing::Size(100, 20);
			this->txtUsername->TabIndex = 8;
			// lblPassword
			this->lblPassword->AutoSize = true;
			this->lblPassword->Location = System::Drawing::Point(63, 111);
			this->lblPassword->Name = L"lblPassword";
			this->lblPassword->Size = System::Drawing::Size(53, 13);
			this->lblPassword->TabIndex = 7;
			this->lblPassword->Text = L"Password";
			// lblUsername
			this->lblUsername->AutoSize = true;
			this->lblUsername->Location = System::Drawing::Point(63, 76);
			this->lblUsername->Name = L"lblUsername";
			this->lblUsername->Size = System::Drawing::Size(55, 13);
			this->lblUsername->TabIndex = 6;
			this->lblUsername->Text = L"Username";
			// Login
			this->AutoScaleDimensions = System::Drawing::SizeF(6, 13);
			this->AutoScaleMode = System::Windows::Forms::AutoScaleMode::Font;
			this->ClientSize = System::Drawing::Size(284, 261);
			this->Controls->Add(this->btnEnter);
			this->Controls->Add(this->btnClear);
			this->Controls->Add(this->txtPassword);
			this->Controls->Add(this->txtUsername);
			this->Controls->Add(this->lblPassword);
			this->Controls->Add(this->lblUsername);
			this->Name = L"Login";
			this->Text = L"Login";
			this->Load += gcnew System::EventHandler(this, &Login::Login_Load);
			this->ResumeLayout(false);
			this->PerformLayout();

		}
#pragma endregion
	private: System::Void btnClear_Click(System::Object^ sender, System::EventArgs^ e) { //This method clears the textboxes of any entered data and is activated when the object btnClear is clicked
		txtUsername->Text = "";
		txtPassword->Text = "";
	}
private: System::Void btnEnter_Click(System::Object^ sender, System::EventArgs^ e) { //This method compares the entered user data with the saved login details and is executed when the object btnEnter is clicked 
	LoginDetails Login; //Declares the struct inside this event 
	Login.Username = "JDoe44"; //Initialises the Username variable inside the Login struct
	Login.Password = "John_@10"; //Initialises the Password variable inside the Login struct

	String^ Username = gcnew String(Login.Username.c_str()); //Converts the struct std string variable "Username" into a system string so it can be compared to the data inside the Username textbox (textbox data type is a System string) (help from the C++/CLR documentation)
	String^ Password = gcnew String(Login.Password.c_str()); //Converts the struct std string variable "Password" into a system string so it can be compared to the data inside the Password textbox (help from the C++/CLR documentation)
	if ((txtUsername->Text == "") || (txtPassword->Text == "")) { //Checks if the text inside the textboxes is empty (Presence Check Data Validation)
		MessageBox::Show("Please ensure that you have entered your Login details into the Username and Password textboxes", "Presence Error"); //Error message which displays if any of the textboxes are empty
	}
	else { //If none of the textboxes are empty, then the system will check if the user's login details match what has been entered into the textboxes
		if (txtUsername->Text == Username) { //If the usernames match, only then will the system check if the passwords match
			if (txtPassword->Text == Password) {
				MessageBox::Show("Login was successful\nWelcome", "Login Successful"); //Message displayed to the user if they have successfully logged into the system
				this->Hide(); //Login form is hidden (Lines 135-137 is adapted from "Visual C++ Tutorial 6 -Windows Forms Application: How To Open A Second Form")
				HomePage^ form = gcnew HomePage(this); //An object is created which pairs with the HomePage form
				form->ShowDialog(); //The HomePage form is shown to the user 
			}
			else { //If the passwords do not match, then the appropriate error message will be displayed to the user
				MessageBox::Show("The provided password does match the stored password.\nPlease try again", "Incorrect Password");
			}
		}
		else { //If the usernames do not match, then the appropriate error message will be displayed to the user
			MessageBox::Show("The provided username does match the stored username.\nPlease try again", "Incorrect Username");
		}
	}
}
private: System::Void Login_Load(System::Object^ sender, System::EventArgs^ e) {
}
};
}
